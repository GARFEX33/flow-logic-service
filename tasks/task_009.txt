# Task ID: 9
# Title: Flow State Management Logic
# Status: done
# Dependencies: 4, 6
# Priority: high
# Description: Implement the logic for managing the state transitions of a `flujo_ejecutado` record (`recibido` -> `en_proceso` -> `procesado` / `fallido`). This logic will be used by the orchestrator.
# Details:
Create a service or utility class (e.g., src/application/flowStateManager.ts). This class should have methods like `startProcessing(flowId)`, `completeProcessing(flowId)`, `failProcessing(flowId, errorDetails)`. These methods should update the state in the `flujo_ejecutado` record, potentially interacting with the database repository (Task 6). Use Context7 MCP annotations for state transition methods.

# Test Strategy:
Write unit tests for the state manager methods, ensuring correct state transitions and interaction with the database repository (mock the repository if needed). Test handling of errors during state updates.

# Subtasks:
## 1. Diseñar la clase FlowStateManager [done]
### Dependencies: None
### Description: Crear una clase en TypeScript ubicada en src/application/flowStateManager.ts que gestione las transiciones de estado de los registros 'flujo_ejecutado'.
### Details:
La clase debe incluir métodos como 'startProcessing(flowId)', 'completeProcessing(flowId)' y 'failProcessing(flowId, errorDetails)', que actualicen el estado del registro correspondiente en la base de datos.

## 2. Integrar la clase FlowStateManager con el repositorio de la base de datos [done]
### Dependencies: 9.1
### Description: Conectar la clase FlowStateManager con el repositorio de la base de datos para realizar las actualizaciones de estado en los registros 'flujo_ejecutado'.
### Details:
Utilizar el repositorio de la base de datos para implementar las operaciones de actualización de estado en los métodos de la clase FlowStateManager, asegurando la consistencia de los datos.

## 3. Aplicar anotaciones MCP de Context7 en los métodos de transición de estado [done]
### Dependencies: 9.1
### Description: Utilizar las anotaciones MCP de Context7 para documentar y gestionar las transiciones de estado en los métodos de la clase FlowStateManager.
### Details:
Aplicar las anotaciones MCP de Context7 en los métodos 'startProcessing', 'completeProcessing' y 'failProcessing' para facilitar la comprensión y mantenimiento del código, y para integrarse con herramientas que soporten el protocolo MCP.

