# Task ID: 2
# Title: Configuration Loading Implementation
# Status: done
# Dependencies: 1
# Priority: high
# Description: Implement the logic to load environment variables required for the service operation, including BROKER_URL, ENV, SERVICE_NAME, LOG_LEVEL, and the optional AUDIT_DB_URL. Use a library like dotenv.
# Details:
Install dotenv. Create a config module (e.g., src/config/index.ts) that loads variables from a .env file or the environment. Define an interface for the configuration object. Handle potential missing required variables (e.g., throw errors). Use Context7 MCP annotations for configuration loading points.

# Test Strategy:
Write unit tests to verify that configuration variables are loaded correctly from environment and/or .env file. Test cases for missing required variables.

# Subtasks:
## 1. Set Up Environment Variables [done]
### Dependencies: None
### Description: Create a .env file in the project's root directory to define the required environment variables: BROKER_URL, ENV, SERVICE_NAME, LOG_LEVEL, and optionally AUDIT_DB_URL.
### Details:
In the .env file, include lines like:

BROKER_URL=your_broker_url
ENV=your_environment
SERVICE_NAME=your_service_name
LOG_LEVEL=your_log_level
AUDIT_DB_URL=your_optional_audit_db_url

## 2. Implement Configuration Loading [done]
### Dependencies: 2.1
### Description: Utilize Node.js's built-in support for loading .env files to load the environment variables into the application.
### Details:
With Node.js v20.6.0 or later, you can load the .env file by running the application with the --env-file flag:

node --env-file=.env your_app.js

This will automatically populate process.env with the variables defined in the .env file.

## 3. Handle Missing Required Variables [done]
### Dependencies: 2.2
### Description: Implement logic to check for the presence of required environment variables and throw errors if any are missing.
### Details:
After loading the environment variables, check if each required variable is present in process.env. If any are missing, throw an error with a descriptive message to aid in debugging.

